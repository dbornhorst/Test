ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.section	.rodata.str1.4,"aMS",%progbits,1
  13              		.align	2
  14              	.LC0:
  15 0000 64656661 		.ascii	"defaultTask\000"
  15      756C7454 
  15      61736B00 
  16              		.align	2
  17              	.LC2:
  18 000c 5461736B 		.ascii	"TaskButton\000"
  18      42757474 
  18      6F6E00
  19              		.text
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.section	.text.MX_GPIO_Init,"ax",%progbits
  23              		.align	1
  24              		.arch armv7-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu softvfp
  30              	MX_GPIO_Init:
  31              	.LFB72:
  32              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 2


  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** osThreadId defaultTaskHandle;
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** osThreadId Task2Handle;
  47:Core/Src/main.c **** osThreadId TaskButtonHandle;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** void Task2_init(void const * argument);
  57:Core/Src/main.c **** void TaskButton_init(void const * argument);
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 3


  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  98:Core/Src/main.c ****   /* add mutexes, ... */
  99:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 102:Core/Src/main.c ****   /* add semaphores, ... */
 103:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 106:Core/Src/main.c ****   /* start timers, add new ones, ... */
 107:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 110:Core/Src/main.c ****   /* add queues, ... */
 111:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Create the thread(s) */
 114:Core/Src/main.c ****   /* definition and creation of defaultTask */
 115:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 116:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 119:Core/Src/main.c ****   //osThreadDef(Task2, Task2_init, osPriorityBelowNormal,0, 128);
 120:Core/Src/main.c ****   //Task2Handle = osThreadCreate(osThread(Task2), NULL);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   osThreadDef(TaskButton, TaskButton_init, osPriorityNormal,0, 128);
 123:Core/Src/main.c ****   TaskButtonHandle = osThreadCreate(osThread(TaskButton), NULL);
 124:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Start scheduler */
 127:Core/Src/main.c ****   osKernelStart();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 130:Core/Src/main.c ****   /* Infinite loop */
 131:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 132:Core/Src/main.c ****   while (1)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 4


 137:Core/Src/main.c ****   }
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****   * @brief System Clock Configuration
 143:Core/Src/main.c ****   * @retval None
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c **** void SystemClock_Config(void)
 146:Core/Src/main.c **** {
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 151:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   /** Configure the Systick interrupt time
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_RCC_PLLI2S_ENABLE();
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief GPIO Initialization Function
 182:Core/Src/main.c ****   * @param None
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** static void MX_GPIO_Init(void)
 186:Core/Src/main.c **** {
  33              		.loc 1 186 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 32
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 70B5     		push	{r4, r5, r6, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 5


  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
  44 0002 88B0     		sub	sp, sp, #32
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 48
 187:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 187 3 view .LVU1
  48              		.loc 1 187 20 is_stmt 0 view .LVU2
  49 0004 0024     		movs	r4, #0
  50 0006 0494     		str	r4, [sp, #16]
  51 0008 0594     		str	r4, [sp, #20]
  52 000a 0694     		str	r4, [sp, #24]
  53 000c 0794     		str	r4, [sp, #28]
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  54              		.loc 1 190 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 190 3 view .LVU4
  57              		.loc 1 190 3 view .LVU5
  58 000e 1B4B     		ldr	r3, .L3
  59 0010 9A69     		ldr	r2, [r3, #24]
  60 0012 42F00402 		orr	r2, r2, #4
  61 0016 9A61     		str	r2, [r3, #24]
  62              		.loc 1 190 3 view .LVU6
  63 0018 9A69     		ldr	r2, [r3, #24]
  64 001a 02F00402 		and	r2, r2, #4
  65 001e 0192     		str	r2, [sp, #4]
  66              		.loc 1 190 3 view .LVU7
  67 0020 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 190 3 view .LVU8
 191:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 191 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 191 3 view .LVU10
  73              		.loc 1 191 3 view .LVU11
  74 0022 9A69     		ldr	r2, [r3, #24]
  75 0024 42F01002 		orr	r2, r2, #16
  76 0028 9A61     		str	r2, [r3, #24]
  77              		.loc 1 191 3 view .LVU12
  78 002a 9A69     		ldr	r2, [r3, #24]
  79 002c 02F01002 		and	r2, r2, #16
  80 0030 0292     		str	r2, [sp, #8]
  81              		.loc 1 191 3 view .LVU13
  82 0032 029A     		ldr	r2, [sp, #8]
  83              	.LBE5:
  84              		.loc 1 191 3 view .LVU14
 192:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  85              		.loc 1 192 3 view .LVU15
  86              	.LBB6:
  87              		.loc 1 192 3 view .LVU16
  88              		.loc 1 192 3 view .LVU17
  89 0034 9A69     		ldr	r2, [r3, #24]
  90 0036 42F00802 		orr	r2, r2, #8
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 6


  91 003a 9A61     		str	r2, [r3, #24]
  92              		.loc 1 192 3 view .LVU18
  93 003c 9B69     		ldr	r3, [r3, #24]
  94 003e 03F00803 		and	r3, r3, #8
  95 0042 0393     		str	r3, [sp, #12]
  96              		.loc 1 192 3 view .LVU19
  97 0044 039B     		ldr	r3, [sp, #12]
  98              	.LBE6:
  99              		.loc 1 192 3 view .LVU20
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 195:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, STAT1_Pin|STAT2_Pin, GPIO_PIN_RESET);
 100              		.loc 1 195 3 view .LVU21
 101 0046 0E4D     		ldr	r5, .L3+4
 102 0048 2246     		mov	r2, r4
 103 004a C021     		movs	r1, #192
 104 004c 2846     		mov	r0, r5
 105 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL0:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /*Configure GPIO pin : FREAK_Pin */
 198:Core/Src/main.c ****   GPIO_InitStruct.Pin = FREAK_Pin;
 107              		.loc 1 198 3 view .LVU22
 108              		.loc 1 198 23 is_stmt 0 view .LVU23
 109 0052 0126     		movs	r6, #1
 110 0054 0496     		str	r6, [sp, #16]
 199:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 111              		.loc 1 199 3 is_stmt 1 view .LVU24
 112              		.loc 1 199 24 is_stmt 0 view .LVU25
 113 0056 0594     		str	r4, [sp, #20]
 200:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 200 3 is_stmt 1 view .LVU26
 115              		.loc 1 200 24 is_stmt 0 view .LVU27
 116 0058 0694     		str	r4, [sp, #24]
 201:Core/Src/main.c ****   HAL_GPIO_Init(FREAK_GPIO_Port, &GPIO_InitStruct);
 117              		.loc 1 201 3 is_stmt 1 view .LVU28
 118 005a 04A9     		add	r1, sp, #16
 119 005c 0948     		ldr	r0, .L3+8
 120 005e FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /*Configure GPIO pins : STAT1_Pin STAT2_Pin */
 204:Core/Src/main.c ****   GPIO_InitStruct.Pin = STAT1_Pin|STAT2_Pin;
 122              		.loc 1 204 3 view .LVU29
 123              		.loc 1 204 23 is_stmt 0 view .LVU30
 124 0062 C023     		movs	r3, #192
 125 0064 0493     		str	r3, [sp, #16]
 205:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 205 3 is_stmt 1 view .LVU31
 127              		.loc 1 205 24 is_stmt 0 view .LVU32
 128 0066 0596     		str	r6, [sp, #20]
 206:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 206 3 is_stmt 1 view .LVU33
 130              		.loc 1 206 24 is_stmt 0 view .LVU34
 131 0068 0694     		str	r4, [sp, #24]
 207:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 207 3 is_stmt 1 view .LVU35
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 7


 133              		.loc 1 207 25 is_stmt 0 view .LVU36
 134 006a 0223     		movs	r3, #2
 135 006c 0793     		str	r3, [sp, #28]
 208:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 136              		.loc 1 208 3 is_stmt 1 view .LVU37
 137 006e 04A9     		add	r1, sp, #16
 138 0070 2846     		mov	r0, r5
 139 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL2:
 209:Core/Src/main.c **** }
 141              		.loc 1 209 1 is_stmt 0 view .LVU38
 142 0076 08B0     		add	sp, sp, #32
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		@ sp needed
 146 0078 70BD     		pop	{r4, r5, r6, pc}
 147              	.L4:
 148 007a 00BF     		.align	2
 149              	.L3:
 150 007c 00100240 		.word	1073876992
 151 0080 00100140 		.word	1073811456
 152 0084 00080140 		.word	1073809408
 153              		.cfi_endproc
 154              	.LFE72:
 156              		.section	.text.TaskButton_init,"ax",%progbits
 157              		.align	1
 158              		.global	TaskButton_init
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	TaskButton_init:
 165              	.LFB74:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 212:Core/Src/main.c **** void Task2_init(void const * argument)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** 	while(1)
 216:Core/Src/main.c **** 	{
 217:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC, STAT1_Pin|STAT2_Pin, GPIO_PIN_SET);
 218:Core/Src/main.c **** 		//HAL_Delay(432);
 219:Core/Src/main.c **** 		//osDelay(233);
 220:Core/Src/main.c **** 		vTaskDelay(233 / portTICK_PERIOD_MS);
 221:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC, STAT1_Pin|STAT2_Pin, GPIO_PIN_RESET);
 222:Core/Src/main.c **** 		//HAL_Delay(432);
 223:Core/Src/main.c **** 		//osDelay(233);
 224:Core/Src/main.c **** 		vTaskDelay(233 / portTICK_PERIOD_MS);
 225:Core/Src/main.c **** 	}
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** void TaskButton_init(void const * argument)
 230:Core/Src/main.c **** {
 166              		.loc 1 230 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 8


 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL3:
 171              		.loc 1 230 1 is_stmt 0 view .LVU40
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 177 0002 09E0     		b	.L7
 178              	.LVL4:
 179              	.L9:
 231:Core/Src/main.c **** 	GPIO_PinState currentState;
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 	while(1)
 234:Core/Src/main.c **** 	{
 235:Core/Src/main.c **** 		currentState = HAL_GPIO_ReadPin(GPIOA, FREAK_Pin);
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** 		if (currentState == GPIO_PIN_SET)
 238:Core/Src/main.c **** 		{
 239:Core/Src/main.c **** 			HAL_GPIO_TogglePin(GPIOC, STAT1_Pin|STAT2_Pin);
 180              		.loc 1 239 4 is_stmt 1 view .LVU41
 181 0004 C021     		movs	r1, #192
 182 0006 0848     		ldr	r0, .L10
 183              	.LVL5:
 184              		.loc 1 239 4 is_stmt 0 view .LVU42
 185 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 186              	.LVL6:
 240:Core/Src/main.c **** 			//HAL_Delay(100);
 241:Core/Src/main.c **** 			//osDelay(100);
 242:Core/Src/main.c **** 			vTaskDelay(30 / portTICK_PERIOD_MS);
 187              		.loc 1 242 4 is_stmt 1 view .LVU43
 188 000c 1E20     		movs	r0, #30
 189 000e FFF7FEFF 		bl	vTaskDelay
 190              	.LVL7:
 191              	.L6:
 243:Core/Src/main.c **** 		}
 244:Core/Src/main.c **** 		vTaskDelay(10 / portTICK_PERIOD_MS);
 192              		.loc 1 244 3 view .LVU44
 193 0012 0A20     		movs	r0, #10
 194 0014 FFF7FEFF 		bl	vTaskDelay
 195              	.LVL8:
 233:Core/Src/main.c **** 	{
 196              		.loc 1 233 7 view .LVU45
 197              	.L7:
 231:Core/Src/main.c **** 
 198              		.loc 1 231 2 view .LVU46
 233:Core/Src/main.c **** 	{
 199              		.loc 1 233 2 view .LVU47
 235:Core/Src/main.c **** 
 200              		.loc 1 235 3 view .LVU48
 235:Core/Src/main.c **** 
 201              		.loc 1 235 18 is_stmt 0 view .LVU49
 202 0018 0121     		movs	r1, #1
 203 001a 0448     		ldr	r0, .L10+4
 204 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 205              	.LVL9:
 237:Core/Src/main.c **** 		{
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 9


 206              		.loc 1 237 3 is_stmt 1 view .LVU50
 237:Core/Src/main.c **** 		{
 207              		.loc 1 237 6 is_stmt 0 view .LVU51
 208 0020 0128     		cmp	r0, #1
 209 0022 EFD0     		beq	.L9
 210 0024 F5E7     		b	.L6
 211              	.L11:
 212 0026 00BF     		.align	2
 213              	.L10:
 214 0028 00100140 		.word	1073811456
 215 002c 00080140 		.word	1073809408
 216              		.cfi_endproc
 217              	.LFE74:
 219              		.section	.text.StartDefaultTask,"ax",%progbits
 220              		.align	1
 221              		.global	StartDefaultTask
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	StartDefaultTask:
 228              	.LFB75:
 245:Core/Src/main.c **** 	}
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** /* USER CODE END 4 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 252:Core/Src/main.c ****   * @param  argument: Not used
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 256:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 257:Core/Src/main.c **** {
 229              		.loc 1 257 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ Volatile: function does not return.
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL10:
 235              		.loc 1 257 1 is_stmt 0 view .LVU53
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 241              	.LVL11:
 242              	.L13:
 258:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 259:Core/Src/main.c ****   /* Infinite loop */
 260:Core/Src/main.c ****   for(;;)
 243              		.loc 1 260 3 is_stmt 1 discriminator 1 view .LVU54
 261:Core/Src/main.c **** 	{
 262:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOC, STAT1_Pin|STAT2_Pin);
 244              		.loc 1 262 3 discriminator 1 view .LVU55
 245 0002 C021     		movs	r1, #192
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 10


 246 0004 0348     		ldr	r0, .L15
 247 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 248              	.LVL12:
 263:Core/Src/main.c **** 		//HAL_Delay(250);
 264:Core/Src/main.c **** 		//osDelay(250);
 265:Core/Src/main.c **** 		vTaskDelay(250 / portTICK_PERIOD_MS);
 249              		.loc 1 265 3 discriminator 1 view .LVU56
 250 000a FA20     		movs	r0, #250
 251 000c FFF7FEFF 		bl	vTaskDelay
 252              	.LVL13:
 260:Core/Src/main.c **** 	{
 253              		.loc 1 260 8 discriminator 1 view .LVU57
 254 0010 F7E7     		b	.L13
 255              	.L16:
 256 0012 00BF     		.align	2
 257              	.L15:
 258 0014 00100140 		.word	1073811456
 259              		.cfi_endproc
 260              	.LFE75:
 262              		.section	.text.Task2_init,"ax",%progbits
 263              		.align	1
 264              		.global	Task2_init
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	Task2_init:
 271              	.LFB73:
 213:Core/Src/main.c **** 
 272              		.loc 1 213 1 view -0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL14:
 213:Core/Src/main.c **** 
 278              		.loc 1 213 1 is_stmt 0 view .LVU59
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 284              	.LVL15:
 285              	.L18:
 215:Core/Src/main.c **** 	{
 286              		.loc 1 215 2 is_stmt 1 discriminator 1 view .LVU60
 217:Core/Src/main.c **** 		//HAL_Delay(432);
 287              		.loc 1 217 3 discriminator 1 view .LVU61
 288 0002 094C     		ldr	r4, .L20
 289 0004 0122     		movs	r2, #1
 290 0006 C021     		movs	r1, #192
 291 0008 2046     		mov	r0, r4
 292 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 293              	.LVL16:
 220:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC, STAT1_Pin|STAT2_Pin, GPIO_PIN_RESET);
 294              		.loc 1 220 3 discriminator 1 view .LVU62
 295 000e E920     		movs	r0, #233
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 11


 296 0010 FFF7FEFF 		bl	vTaskDelay
 297              	.LVL17:
 221:Core/Src/main.c **** 		//HAL_Delay(432);
 298              		.loc 1 221 3 discriminator 1 view .LVU63
 299 0014 0022     		movs	r2, #0
 300 0016 C021     		movs	r1, #192
 301 0018 2046     		mov	r0, r4
 302 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 303              	.LVL18:
 224:Core/Src/main.c **** 	}
 304              		.loc 1 224 3 discriminator 1 view .LVU64
 305 001e E920     		movs	r0, #233
 306 0020 FFF7FEFF 		bl	vTaskDelay
 307              	.LVL19:
 215:Core/Src/main.c **** 	{
 308              		.loc 1 215 7 discriminator 1 view .LVU65
 309 0024 EDE7     		b	.L18
 310              	.L21:
 311 0026 00BF     		.align	2
 312              	.L20:
 313 0028 00100140 		.word	1073811456
 314              		.cfi_endproc
 315              	.LFE73:
 317              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 318              		.align	1
 319              		.global	HAL_TIM_PeriodElapsedCallback
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 325              	HAL_TIM_PeriodElapsedCallback:
 326              	.LVL20:
 327              	.LFB76:
 266:Core/Src/main.c **** 	}
 267:Core/Src/main.c ****   /* USER CODE END 5 */
 268:Core/Src/main.c **** }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 272:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 273:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 274:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 275:Core/Src/main.c ****   * @param  htim : TIM handle
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 279:Core/Src/main.c **** {
 328              		.loc 1 279 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		.loc 1 279 1 is_stmt 0 view .LVU67
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI6:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 12


 280:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 283:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 338              		.loc 1 283 3 is_stmt 1 view .LVU68
 339              		.loc 1 283 11 is_stmt 0 view .LVU69
 340 0002 0268     		ldr	r2, [r0]
 341              		.loc 1 283 6 view .LVU70
 342 0004 034B     		ldr	r3, .L26
 343 0006 9A42     		cmp	r2, r3
 344 0008 00D0     		beq	.L25
 345              	.LVL21:
 346              	.L22:
 284:Core/Src/main.c ****     HAL_IncTick();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 289:Core/Src/main.c **** }
 347              		.loc 1 289 1 view .LVU71
 348 000a 08BD     		pop	{r3, pc}
 349              	.LVL22:
 350              	.L25:
 284:Core/Src/main.c ****     HAL_IncTick();
 351              		.loc 1 284 5 is_stmt 1 view .LVU72
 352 000c FFF7FEFF 		bl	HAL_IncTick
 353              	.LVL23:
 354              		.loc 1 289 1 is_stmt 0 view .LVU73
 355 0010 FBE7     		b	.L22
 356              	.L27:
 357 0012 00BF     		.align	2
 358              	.L26:
 359 0014 002C0140 		.word	1073818624
 360              		.cfi_endproc
 361              	.LFE76:
 363              		.section	.text.Error_Handler,"ax",%progbits
 364              		.align	1
 365              		.global	Error_Handler
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	Error_Handler:
 372              	.LFB77:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /**
 292:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** void Error_Handler(void)
 296:Core/Src/main.c **** {
 373              		.loc 1 296 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ Volatile: function does not return.
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 13


 297:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 298:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 299:Core/Src/main.c ****   __disable_irq();
 379              		.loc 1 299 3 view .LVU75
 380              	.LBB7:
 381              	.LBI7:
 382              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 14


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 15


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 383              		.loc 2 140 27 view .LVU76
 384              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 385              		.loc 2 142 3 view .LVU77
 386              		.syntax unified
 387              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 388 0000 72B6     		cpsid i
 389              	@ 0 "" 2
 390              		.thumb
 391              		.syntax unified
 392              	.L29:
 393              	.LBE8:
 394              	.LBE7:
 300:Core/Src/main.c ****   while (1)
 395              		.loc 1 300 3 discriminator 1 view .LVU78
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****   }
 396              		.loc 1 302 3 discriminator 1 view .LVU79
 300:Core/Src/main.c ****   while (1)
 397              		.loc 1 300 9 discriminator 1 view .LVU80
 398 0002 FEE7     		b	.L29
 399              		.cfi_endproc
 400              	.LFE77:
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 16


 402              		.section	.text.SystemClock_Config,"ax",%progbits
 403              		.align	1
 404              		.global	SystemClock_Config
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu softvfp
 410              	SystemClock_Config:
 411              	.LFB71:
 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 412              		.loc 1 146 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 80
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 00B5     		push	{lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 14, -4
 420 0002 95B0     		sub	sp, sp, #84
 421              	.LCFI8:
 422              		.cfi_def_cfa_offset 88
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 423              		.loc 1 147 3 view .LVU82
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 424              		.loc 1 147 22 is_stmt 0 view .LVU83
 425 0004 3822     		movs	r2, #56
 426 0006 0021     		movs	r1, #0
 427 0008 06A8     		add	r0, sp, #24
 428 000a FFF7FEFF 		bl	memset
 429              	.LVL24:
 148:Core/Src/main.c **** 
 430              		.loc 1 148 3 is_stmt 1 view .LVU84
 148:Core/Src/main.c **** 
 431              		.loc 1 148 22 is_stmt 0 view .LVU85
 432 000e 0023     		movs	r3, #0
 433 0010 0193     		str	r3, [sp, #4]
 434 0012 0293     		str	r3, [sp, #8]
 435 0014 0393     		str	r3, [sp, #12]
 436 0016 0493     		str	r3, [sp, #16]
 437 0018 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 438              		.loc 1 153 3 is_stmt 1 view .LVU86
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 439              		.loc 1 153 36 is_stmt 0 view .LVU87
 440 001a 0223     		movs	r3, #2
 441 001c 0693     		str	r3, [sp, #24]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 442              		.loc 1 154 3 is_stmt 1 view .LVU88
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 443              		.loc 1 154 30 is_stmt 0 view .LVU89
 444 001e 0123     		movs	r3, #1
 445 0020 0B93     		str	r3, [sp, #44]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 446              		.loc 1 155 3 is_stmt 1 view .LVU90
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 447              		.loc 1 155 41 is_stmt 0 view .LVU91
 448 0022 1023     		movs	r3, #16
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 17


 449 0024 0C93     		str	r3, [sp, #48]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 450              		.loc 1 156 3 is_stmt 1 view .LVU92
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 451              		.loc 1 157 3 view .LVU93
 158:Core/Src/main.c ****   {
 452              		.loc 1 158 3 view .LVU94
 158:Core/Src/main.c ****   {
 453              		.loc 1 158 7 is_stmt 0 view .LVU95
 454 0026 06A8     		add	r0, sp, #24
 455 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 456              	.LVL25:
 158:Core/Src/main.c ****   {
 457              		.loc 1 158 6 view .LVU96
 458 002c 80B9     		cbnz	r0, .L34
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 459              		.loc 1 164 3 is_stmt 1 view .LVU97
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 460              		.loc 1 164 31 is_stmt 0 view .LVU98
 461 002e 0F23     		movs	r3, #15
 462 0030 0193     		str	r3, [sp, #4]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 463              		.loc 1 166 3 is_stmt 1 view .LVU99
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 464              		.loc 1 166 34 is_stmt 0 view .LVU100
 465 0032 0021     		movs	r1, #0
 466 0034 0291     		str	r1, [sp, #8]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 467              		.loc 1 167 3 is_stmt 1 view .LVU101
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 468              		.loc 1 167 35 is_stmt 0 view .LVU102
 469 0036 0391     		str	r1, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 470              		.loc 1 168 3 is_stmt 1 view .LVU103
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 471              		.loc 1 168 36 is_stmt 0 view .LVU104
 472 0038 0491     		str	r1, [sp, #16]
 169:Core/Src/main.c **** 
 473              		.loc 1 169 3 is_stmt 1 view .LVU105
 169:Core/Src/main.c **** 
 474              		.loc 1 169 36 is_stmt 0 view .LVU106
 475 003a 0591     		str	r1, [sp, #20]
 171:Core/Src/main.c ****   {
 476              		.loc 1 171 3 is_stmt 1 view .LVU107
 171:Core/Src/main.c ****   {
 477              		.loc 1 171 7 is_stmt 0 view .LVU108
 478 003c 01A8     		add	r0, sp, #4
 479 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 480              	.LVL26:
 171:Core/Src/main.c ****   {
 481              		.loc 1 171 6 view .LVU109
 482 0042 38B9     		cbnz	r0, .L35
 177:Core/Src/main.c **** }
 483              		.loc 1 177 3 is_stmt 1 view .LVU110
 484 0044 044B     		ldr	r3, .L36
 485 0046 0122     		movs	r2, #1
 486 0048 1A67     		str	r2, [r3, #112]
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 18


 178:Core/Src/main.c **** 
 487              		.loc 1 178 1 is_stmt 0 view .LVU111
 488 004a 15B0     		add	sp, sp, #84
 489              	.LCFI9:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 4
 492              		@ sp needed
 493 004c 5DF804FB 		ldr	pc, [sp], #4
 494              	.L34:
 495              	.LCFI10:
 496              		.cfi_restore_state
 160:Core/Src/main.c ****   }
 497              		.loc 1 160 5 is_stmt 1 view .LVU112
 498 0050 FFF7FEFF 		bl	Error_Handler
 499              	.LVL27:
 500              	.L35:
 173:Core/Src/main.c ****   }
 501              		.loc 1 173 5 view .LVU113
 502 0054 FFF7FEFF 		bl	Error_Handler
 503              	.LVL28:
 504              	.L37:
 505              		.align	2
 506              	.L36:
 507 0058 00004242 		.word	1111621632
 508              		.cfi_endproc
 509              	.LFE71:
 511              		.section	.text.main,"ax",%progbits
 512              		.align	1
 513              		.global	main
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu softvfp
 519              	main:
 520              	.LFB70:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 521              		.loc 1 70 1 view -0
 522              		.cfi_startproc
 523              		@ Volatile: function does not return.
 524              		@ args = 0, pretend = 0, frame = 56
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 00B5     		push	{lr}
 527              	.LCFI11:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 14, -4
 530 0002 8FB0     		sub	sp, sp, #60
 531              	.LCFI12:
 532              		.cfi_def_cfa_offset 64
  78:Core/Src/main.c **** 
 533              		.loc 1 78 3 view .LVU115
 534 0004 FFF7FEFF 		bl	HAL_Init
 535              	.LVL29:
  85:Core/Src/main.c **** 
 536              		.loc 1 85 3 view .LVU116
 537 0008 FFF7FEFF 		bl	SystemClock_Config
 538              	.LVL30:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 19


 539              		.loc 1 92 3 view .LVU117
 540 000c FFF7FEFF 		bl	MX_GPIO_Init
 541              	.LVL31:
 115:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 542              		.loc 1 115 3 view .LVU118
 543 0010 124C     		ldr	r4, .L41
 544 0012 0DF11C0C 		add	ip, sp, #28
 545 0016 A646     		mov	lr, r4
 546 0018 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 547 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 548 0020 9EE80700 		ldm	lr, {r0, r1, r2}
 549 0024 8CE80700 		stm	ip, {r0, r1, r2}
 116:Core/Src/main.c **** 
 550              		.loc 1 116 3 view .LVU119
 116:Core/Src/main.c **** 
 551              		.loc 1 116 23 is_stmt 0 view .LVU120
 552 0028 0021     		movs	r1, #0
 553 002a 07A8     		add	r0, sp, #28
 554 002c FFF7FEFF 		bl	osThreadCreate
 555              	.LVL32:
 116:Core/Src/main.c **** 
 556              		.loc 1 116 21 view .LVU121
 557 0030 0B4B     		ldr	r3, .L41+4
 558 0032 1860     		str	r0, [r3]
 122:Core/Src/main.c ****   TaskButtonHandle = osThreadCreate(osThread(TaskButton), NULL);
 559              		.loc 1 122 3 is_stmt 1 view .LVU122
 560 0034 EE46     		mov	lr, sp
 561 0036 04F11C0C 		add	ip, r4, #28
 562 003a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 563 003e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 564 0042 9CE80700 		ldm	ip, {r0, r1, r2}
 565 0046 8EE80700 		stm	lr, {r0, r1, r2}
 123:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 566              		.loc 1 123 3 view .LVU123
 123:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 567              		.loc 1 123 22 is_stmt 0 view .LVU124
 568 004a 0021     		movs	r1, #0
 569 004c 6846     		mov	r0, sp
 570 004e FFF7FEFF 		bl	osThreadCreate
 571              	.LVL33:
 123:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 572              		.loc 1 123 20 view .LVU125
 573 0052 044B     		ldr	r3, .L41+8
 574 0054 1860     		str	r0, [r3]
 127:Core/Src/main.c **** 
 575              		.loc 1 127 3 is_stmt 1 view .LVU126
 576 0056 FFF7FEFF 		bl	osKernelStart
 577              	.LVL34:
 578              	.L39:
 132:Core/Src/main.c ****   {
 579              		.loc 1 132 3 discriminator 1 view .LVU127
 137:Core/Src/main.c ****   /* USER CODE END 3 */
 580              		.loc 1 137 3 discriminator 1 view .LVU128
 132:Core/Src/main.c ****   {
 581              		.loc 1 132 9 discriminator 1 view .LVU129
 582 005a FEE7     		b	.L39
 583              	.L42:
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 20


 584              		.align	2
 585              	.L41:
 586 005c 00000000 		.word	.LANCHOR0
 587 0060 00000000 		.word	.LANCHOR1
 588 0064 00000000 		.word	.LANCHOR2
 589              		.cfi_endproc
 590              	.LFE70:
 592              		.global	TaskButtonHandle
 593              		.global	Task2Handle
 594              		.global	defaultTaskHandle
 595              		.section	.rodata
 596              		.align	2
 597              		.set	.LANCHOR0,. + 0
 598              	.LC4:
 599 0000 00000000 		.word	.LC0
 600 0004 00000000 		.word	StartDefaultTask
 601 0008 0000     		.short	0
 602 000a 0000     		.space	2
 603 000c 00000000 		.word	0
 604 0010 80000000 		.word	128
 605 0014 00000000 		.word	0
 606 0018 00000000 		.word	0
 607              	.LC5:
 608 001c 0C000000 		.word	.LC2
 609 0020 00000000 		.word	TaskButton_init
 610 0024 0000     		.short	0
 611 0026 0000     		.space	2
 612 0028 00000000 		.word	0
 613 002c 80000000 		.word	128
 614 0030 00000000 		.word	0
 615 0034 00000000 		.word	0
 616              		.section	.bss.Task2Handle,"aw",%nobits
 617              		.align	2
 620              	Task2Handle:
 621 0000 00000000 		.space	4
 622              		.section	.bss.TaskButtonHandle,"aw",%nobits
 623              		.align	2
 624              		.set	.LANCHOR2,. + 0
 627              	TaskButtonHandle:
 628 0000 00000000 		.space	4
 629              		.section	.bss.defaultTaskHandle,"aw",%nobits
 630              		.align	2
 631              		.set	.LANCHOR1,. + 0
 634              	defaultTaskHandle:
 635 0000 00000000 		.space	4
 636              		.text
 637              	.Letext0:
 638              		.file 3 "/Users/dborn/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xp
 639              		.file 4 "/Users/dborn/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xp
 640              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f107xc.h"
 641              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 642              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 643              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 644              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 645              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 646              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 647              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 21


 648              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 649              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 650              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 651              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 652              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 653              		.file 18 "<built-in>"
ARM GAS  /var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:13     .rodata.str1.4:0000000000000000 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:23     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:30     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:150    .text.MX_GPIO_Init:000000000000007c $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:157    .text.TaskButton_init:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:164    .text.TaskButton_init:0000000000000000 TaskButton_init
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:214    .text.TaskButton_init:0000000000000028 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:220    .text.StartDefaultTask:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:227    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:258    .text.StartDefaultTask:0000000000000014 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:263    .text.Task2_init:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:270    .text.Task2_init:0000000000000000 Task2_init
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:313    .text.Task2_init:0000000000000028 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:318    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:325    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:359    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:364    .text.Error_Handler:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:371    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:403    .text.SystemClock_Config:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:410    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:507    .text.SystemClock_Config:0000000000000058 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:512    .text.main:0000000000000000 $t
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:519    .text.main:0000000000000000 main
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:586    .text.main:000000000000005c $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:627    .bss.TaskButtonHandle:0000000000000000 TaskButtonHandle
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:620    .bss.Task2Handle:0000000000000000 Task2Handle
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:634    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:596    .rodata:0000000000000000 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:617    .bss.Task2Handle:0000000000000000 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:623    .bss.TaskButtonHandle:0000000000000000 $d
/var/folders/m5/4z4npxsx1wb4l_wt_3ldt0t40000gn/T//cc3D83J8.s:630    .bss.defaultTaskHandle:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
vTaskDelay
HAL_GPIO_ReadPin
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
